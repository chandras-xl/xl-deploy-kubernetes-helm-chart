{{$XLD_ADMIN_PASS := .Values.AdminPassword | default "admin" }}
{{$XLD_DB_NAME := .Values.UseExistingDB.XL_DB_NAME | default "xld-db"}}
{{$XLD_DB_USER := .Values.UseExistingDB.XL_DB_USERNAME | default "xld"}}
{{$XLD_DB_PASS := .Values.UseExistingDB.XL_DB_PASSWORD | default "xld"}}
{{- if not .Values.UseExistingDB.Enabled }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "xl-deploy.fullname" . }}-postgresql
  labels:
    app: {{ template "xl-deploy.name" . }}
    chart: {{ template "xl-deploy.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  init-sql.sh: |-
    #!/bin/sh
    set -e

    if psql -v ON_ERROR_STOP=1 -h "$POSTGRES_HOST"  --username "$POSTGRES_USER" -lqt | cut -d \| -f 1 | grep -qw {{$XLD_DB_NAME}}; then
       echo "database {{$XLD_DB_NAME}} exists"
    else
        psql -v ON_ERROR_STOP=1 -h "$POSTGRES_HOST" --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
            CREATE USER "{{$XLD_DB_USER}}" WITH ENCRYPTED PASSWORD '{{$XLD_DB_PASS}}';
            CREATE DATABASE "{{$XLD_DB_NAME}}";
            GRANT ALL PRIVILEGES ON DATABASE "{{$XLD_DB_NAME}}" TO "{{$XLD_DB_USER}}";
    EOSQL
       echo "database {{$XLD_DB_NAME}} created"
    fi
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "xl-deploy.fullname" . }}
  labels:
    app: {{ template "xl-deploy.name" . }}
    chart: {{ template "xl-deploy.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "xl-deploy.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "xl-deploy.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: fix-the-volume-permission
          image: xebialabs/tiny-tools
          command:
            - sh
            - -c
            - chown -R 10001 /opt/xebialabs/xl-deploy-server/export
          securityContext:
            privileged: true
          volumeMounts:
            - name: export-dir
              mountPath: /opt/xebialabs/xl-deploy-server/export
        {{- if not .Values.UseExistingDB.Enabled }}
        - name: wait-for-postgresql
          image: xebialabs/tiny-tools
          command:
            - sh
            - -c
            - >
              until nc -z -w 2 $POSTGRES_SVC $POSTGRES_PORT && echo database ok; do
              sleep 2;
              done;
          env:
            - name: POSTGRES_SVC
              value: {{ template "xl-deploy.fullname" . }}-postgresql
            - name: POSTGRES_PORT
              value: "5432"
        - name: create-db
          image: xebialabs/tiny-tools
          imagePullPolicy: Always
          command:
            - '/bin/sh'
            - '/tmp/init-sql.sh'
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_HOST
              value: {{ template "xl-deploy.fullname" . }}-postgresql
        {{- end }}
          volumeMounts:
            - name: postgresql-init-sql-xld
              subPath: init-sql.sh
              mountPath: /tmp/init-sql.sh
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.ImageRepository }}:{{ .Values.ImageTag }}"
          imagePullPolicy: "{{ .Values.ImagePullPolicy }}"
          ports:
            - name: xld-http
              containerPort: 4516
              protocol: TCP
          volumeMounts:
            - name: export-dir
              mountPath: /opt/xebialabs/xl-deploy-server/work
  {{- if .Values.HealthProbes }}
          livenessProbe:
            httpGet:
              path: /
              port: xld-http
            initialDelaySeconds: {{ .Values.HealthProbesLivenessTimeout }}
            periodSeconds: {{ .Values.HealthPeriodScans }}
            failureThreshold: {{ .Values.HealthProbeFailureThreshold }}
          readinessProbe:
            httpGet:
              path: /
              port: xld-http
            initialDelaySeconds: {{ .Values.HealthProbesReadinessTimeout }}
            periodSeconds: {{ .Values.HealthPeriodScans }}
            failureThreshold: {{ .Values.HealthProbeFailureThreshold }}
{{- end }}
          env:
            - name: ADMIN_PASSWORD
              value: {{$XLD_ADMIN_PASS}}
            - name: XLD_DEVELOPMENT_MODE
              value: "{{ .Values.xldDevelopmentMode }}"
            - name: XL_DB_URL
              {{- if not .Values.UseExistingDB.Enabled }}
              value: jdbc:postgresql://{{ template "xl-deploy.fullname" . }}-postgresql:5432/{{$XLD_DB_NAME}}
              {{- else }}
              value: {{.Values.UseExistingDB.XL_DB_URL}}
              {{- end }}
            - name: XL_DB_USERNAME
              value: {{$XLD_DB_USER}}
            - name: XL_DB_PASSWORD
              value: "{{$XLD_DB_PASS}}"
            - name: XL_LICENSE
              value: "{{ .Values.xldLicense }}"
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        {{- if not .Values.UseExistingDB.Enabled }}
        - name: postgresql-init-sql-xld
          configMap:
            name: {{ template "xl-deploy.fullname" . }}-postgresql
            defaultMode: 0777
        {{- end }}
        - name: export-dir
          persistentVolumeClaim:
            claimName: {{ template "xl-deploy.fullname" . }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
